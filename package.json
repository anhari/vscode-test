{
  "name": "vscode-test",
  "displayName": "vscode-test",
  "description": "A configurable test-runner for multiple file types.",
  "icon": "icons/vscode-test.png",
  "version": "0.11.0",
  "publisher": "anhari",
  "repository": {
    "url": "https://github.com/anhari/vscode-test"
  },
  "engines": {
    "vscode": "^1.45.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:vscode-test.runAllTests",
    "onCommand:vscode-test.runAllUnitTests",
    "onCommand:vscode-test.runFileTests",
    "onCommand:vscode-test.runLineTests",
    "onCommand:vscode-test.runLastTests",
    "onCommand:vscode-test.openAlternateFile",
    "onCommand:vscode-test.openAlternateFileInVerticalSplit"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-test.runAllTests",
        "title": "Run All Tests"
      },
      {
        "command": "vscode-test.runAllUnitTests",
        "title": "Run All Unit Tests"
      },
      {
        "command": "vscode-test.runFileTests",
        "title": "Run File Tests"
      },
      {
        "command": "vscode-test.runLineTests",
        "title": "Run Current Line Test"
      },
      {
        "command": "vscode-test.runLastTests",
        "title": "Run Last Tests"
      },
      {
        "command": "vscode-test.openAlternateFile",
        "title": "Open Alternate File"
      },
      {
        "command": "vscode-test.openAlternateFileInVerticalSplit",
        "title": "Open Alternate File (Vertical Split)"
      }
    ],
    "configuration": {
      "title": "vscode-test configurations",
      "properties": {
        "vscode-test.maximizeTerminal": {
          "type": "boolean",
          "default": false,
          "description": "Maximizes the test runner terminal when a command is run"
        },
        "vscode-test.runAllTestsCommand": {
          "type": "string",
          "default": "",
          "description": "Defines a command to run for all tests (i.e. 'bin/rails test:system test', 'mix test')"
        },
        "vscode-test.runAllUnitTestsCommand": {
          "type": "string",
          "default": "",
          "description": "Defines a command to run for all unit tests (i.e. 'bin/rails test')"
        },
        "vscode-test.rubyTestCommand": {
          "type": "string",
          "default": "bin/rails test",
          "description": "Defines a test command to use for ruby files."
        },
        "vscode-test.rubyTestDirectory": {
          "type": "string",
          "default": "test",
          "description": "Define the directory for ruby tests."
        },
        "vscode-test.rubyTestDirectoryLocal": {
          "type": "string",
          "default": "test",
          "description": "If you run your tests e.g. in a docker environment, you may specify an alternative path for opening the file in the editor. Defaults to `vscode-test.rubyTestDirectory`."
        },
        "vscode-test.rubyTestPattern": {
          "type": "string",
          "default": "_test.rb",
          "description": "Define the pattern for ruby test files."
        },
        "vscode-test.elixirTestCommand": {
          "type": "string",
          "default": "mix test",
          "description": "Defines a test command to use for elixir files."
        },
        "vscode-test.elixirTestDirectory": {
          "type": "string",
          "default": "test",
          "description": "Define the directory for elixir tests."
        },
        "vscode-test.elixirTestDirectoryLocal": {
          "type": "string",
          "default": "test",
          "description": "If you run your tests e.g. in a docker environment, you may specify an alternative path for opening the file in the editor. Defaults to `vscode-test.elixirTestDirectory`."
        },
        "vscode-test.elixirTestPattern": {
          "type": "string",
          "default": "_test.exs",
          "description": "Define the pattern for elixir test files."
        },
        "vscode-test.typescriptTestCommand": {
          "type": "string",
          "default": "npx mocha -r ./node_modules/ts-node/register -S --exit",
          "description": "Defines a test command to use for typescript files."
        },
        "vscode-test.typescriptTestDirectory": {
          "type": "string",
          "default": "test",
          "description": "Define the directory for typescript tests."
        },
        "vscode-test.typescriptTestDirectoryLocal": {
          "type": "string",
          "default": "test",
          "description": "If you run your tests e.g. in a docker environment, you may specify an alternative path for opening the file in the editor. Defaults to `vscode-test.typescriptTestDirectory`."
        },
        "vscode-test.typescriptTestPattern": {
          "type": "string",
          "default": "test.ts",
          "description": "Define the pattern for typescript test files."
        }
      }
    }
  },
  "keywords": [
    "Test Runners",
    "RSpec",
    "MiniTest",
    "Elixir",
    "typescript"
  ],
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@babel/core": "^7.9.6",
    "@babel/preset-env": "^7.9.6",
    "@types/glob": "^7.1.1",
    "@types/jest": "^25.2.3",
    "@types/node": "^13.11.0",
    "@types/vscode": "^1.45.0",
    "@typescript-eslint/eslint-plugin": "^2.30.0",
    "@typescript-eslint/parser": "^2.30.0",
    "babel-jest": "^26.0.1",
    "eslint": "^6.8.0",
    "glob": "^7.1.6",
    "husky": ">=4",
    "jest": "^26.0.1",
    "lint-staged": ">=10",
    "prettier": "^2.0.5",
    "ts-jest": "^26.0.0",
    "typescript": "^3.8.3",
    "vscode-test": "^1.3.0"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": "eslint --cache --fix",
    "*.{js,css,md,ts}": "prettier --write"
  },
  "dependencies": {
    "yarn": "^1.22.19"
  }
}
